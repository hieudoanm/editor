(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6446],{2748:(e,n,a)=>{"use strict";a.d(n,{F:()=>c});var l=a(2548),r=a(8991),i=a(8159),t=a.n(i);let s=e=>{let{title:n="",options:a=[]}=e;return(0,l.jsxs)("div",{className:"group relative inline-block text-left",children:[(0,l.jsxs)("button",{type:"button",className:"inline-flex items-center justify-center gap-1 rounded-md",children:[(0,l.jsx)("span",{children:n}),(0,l.jsx)("span",{className:"text-xs",children:"▾"})]}),(0,l.jsx)("div",{className:"invisible absolute right-0 z-50 mt-2 origin-top-right scale-95 transform rounded-md border border-neutral-200 bg-white p-1 text-sm opacity-0 shadow-lg transition-all group-hover:visible group-hover:scale-100 group-hover:opacity-100 dark:border-neutral-700 dark:bg-neutral-900 dark:text-neutral-100",children:a.map(e=>{let{id:n,href:a,label:r}=e;return(0,l.jsx)(t(),{href:a,className:"block rounded px-3 py-2 whitespace-nowrap hover:bg-neutral-100 dark:hover:bg-neutral-800",children:r},n)})})]})},o=[{id:"chess",title:"Chess",options:[{id:"chess-fen2png",href:"/chess/converter/fen2png",label:"FEN to PNG"},{id:"chess-pgn2gif",href:"/chess/converter/pgn2gif",label:"PGN to GIF"},{id:"chess-chess960",href:"/chess/theory/chess960",label:"Chess960"},{id:"chess-openings",href:"/chess/theory/openings",label:"Openings"},{id:"chess-clock",href:"/chess/tools/clock",label:"Clock"},{id:"chess-elo",href:"/chess/tools/elo",label:"ELO"}]},{id:"clock",title:"Clock",options:[{id:"pomodoro",href:"/clock/pomodoro",label:"Pomodoro"},{id:"timezones",href:"/clock/timezones",label:"Timezones"}]},{id:"converter",title:"Converter",options:[{id:"code",href:"/converter/code",label:"Code"},{id:"colors",href:"/converter/colors",label:"Colors"},{id:"csv",href:"/converter/csv",label:"CSV"},{id:"json",href:"/converter/json",label:"JSON"},{id:"strings",href:"/converter/strings",label:"Strings"},{id:"yaml",href:"/converter/yaml",label:"YAML"}]},{id:"dev",title:"Dev",options:[{id:"openapi2postmanv2",href:"/dev/openapi/postmanv2",label:"OpenAPI to PostmanV2"},{id:"reverse-proxy",href:"/dev/reverse/proxy",label:"Reverse Proxy"}]},{id:"downloads",title:"Downloads",options:[{id:"cli",href:"/downloads/cli",label:"CLI"}]},{id:"editor",title:"Editor",options:[{id:"manifest",href:"/editor/manifest",label:"Manifest"},{id:"markup",href:"/editor/markup",label:"Markup"},{id:"redact",href:"/editor/redact",label:"Redact"}]},{id:"generator",title:"Generator",options:[{id:"qrcode",href:"/generator/qrcode",label:"QRCode"},{id:"uuid",href:"/generator/uuid",label:"UUID"}]},{id:"github",title:"GitHub",options:[{id:"languages",href:"/github/languages",label:"Languages"},{id:"social-preview",href:"/github/preview",label:"Social Preview"}]},{id:"images",title:"Images",options:[{id:"filter",href:"/images/filter",label:"Filter"},{id:"ocr",href:"/images/ocr",label:"OCR"}]},{id:"other",title:"Other",options:[{id:"calculator",href:"/other/calculator",label:"Calculator"},{id:"chat",href:"/other/chat",label:"Chat"},{id:"doi",href:"/other/doi",label:"DOI"},{id:"status",href:"/other/status",label:"Status"},{id:"periodic-table",href:"/other/periodic-table",label:"Periodic Table"}]}],c=()=>(0,l.jsx)("nav",{className:"container mx-auto px-8 py-4",children:(0,l.jsxs)("div",{className:"flex items-center justify-between",children:[(0,l.jsx)("div",{className:"text-xl font-bold",children:(0,l.jsx)(t(),{href:"/",children:r.C})}),(0,l.jsx)("div",{className:"hidden space-x-4 lg:flex",children:o.map(e=>{let{id:n,title:a,options:r}=e;return(0,l.jsx)(s,{title:a,options:r},n)})})]})})},2988:(e,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>d});var l=a(2548),r=a(3266),i=a(2748),t=a(6152),s=a(985);let o='\n%YAML 1.2\n---\nYAML: YAML Ain\'t Markup Language™\n\nWhat It Is:\n  YAML is a human-friendly data serialization\n  language for all programming languages.\n\nYAML Resources:\n  YAML Specifications:\n  - YAML 1.2:\n    - Revision 1.2.2      # Oct 1, 2021 *New*\n    - Revision 1.2.1      # Oct 1, 2009\n    - Revision 1.2.0      # Jul 21, 2009\n  - YAML 1.1\n  - YAML 1.0\n\n  YAML Matrix Chat:  \'#chat:yaml.io\'     # Our New Group Chat Room!\n  YAML IRC Channel:  libera.chat#yaml    # The old chat\n  YAML News:         twitter.com/yamlnews\n  YAML Mailing List: yaml-core           # Obsolete, but historical\n\n  YAML on GitHub:                        # github.com/yaml/\n    YAML Specs:        yaml-spec/\n    YAML 1.2 Grammar:  yaml-grammar/\n    YAML Test Suite:   yaml-test-suite/\n    YAML Issues:       issues/\n\n  YAML Reference Parsers:\n  - Generated Reference Parsers\n  - YPaste Interactive Parser\n\n  YAML Test Matrix:   matrix.yaml.io\n\nYAML Frameworks and Tools:\n  C/C++:\n  - libfyaml      # "C" YAML 1.2 processor (YTS)\n  - libyaml       # "C" Fast YAML 1.1 (YTS)\n  - libcyaml      # YAML de/serialization of C data (using libyaml)\n  - yaml-cpp      # C++ YAML 1.2 implementation\n\n  Crystal:\n  - YAML          # YAML 1.1 from the standard library\n\n  C#/.NET:\n  - YamlDotNet    # YAML 1.1/(1.2) library + serialization (YTS)\n  - yaml-net      # YAML 1.1 library\n\n  D:\n  - D-YAML        # YAML 1.1 library w/ official community support (YTS)\n\n  Dart:\n  - yaml          # YAML package for Dart\n\n  Delphi:\n  - Neslib.Yaml   # YAML 1.1 Delphi binding to libyaml (YTS)\n\n  Elixir:\n  - yaml-elixir   # YAML support for the Elixir language\n\n  Erlang:\n  - yamerl        # YAML support for the Erlang language\n\n  Golang:\n  - Go-yaml       # YAML support for the Go language\n  - Go-gypsy      # Simplified YAML parser written in Go\n  - goccy/go-yaml # YAML 1.2 implementation in pure Go\n\n  Haskell:\n  - HsYAML         # YAML 1.2 implementation in pure Haskell (YTS)\n  - YamlReference  # Haskell 1.2 reference parser\n  - yaml           # YAML 1.1 Haskell framework (based on libyaml)\n\n  Java:\n  - SnakeYAML Engine  # Java 8+ / YAML 1.2\n  - SnakeYAML         # Java 5 / YAML 1.1\n  - YamlBeans         # To/from JavaBeans. YAML 1.0/1.1\n  - eo-yaml           # YAML 1.2 for Java 8. Packaged as a Module (Java 9+)\n  - Chronicle-Wire    # Java Implementation\n\n  JavaScript:\n  - yaml          # JavaScript parser/stringifier (YAML 1.2, 1.1) (YTS)\n  - js-yaml       # Native PyYAML port to JavaScript (Demo)\n\n  Nim:\n  - NimYAML       # YAML 1.2 implementation in pure Nim (YTS)\n\n  OCaml:\n  - ocaml-yaml    # YAML 1.1/1.2 via libyaml bindings\n  - ocaml-syck    # YAML 1.0 via syck bindings\n\n  Perl Modules:\n  - YAML          # Pure Perl YAML 1.0 Module\n  - YAML::XS      # Binding to libyaml\n  - YAML::Syck    # Binding to libsyck\n  - YAML::Tiny    # A small YAML subset module\n  - YAML::PP      # A YAML 1.2/1.1 processor (YTS)\n\n  PHP:\n  - The Yaml Component  # Symfony Yaml Component (YAML 1.2)\n  - php-yaml      # libyaml bindings (YAML 1.1)\n  - syck          # syck bindings (YAML 1.0)\n  - spyc          # yaml loader/dumper (YAML 1.?)\n\n  Python:\n  - PyYAML        # YAML 1.1, pure python and libyaml binding\n  - ruamel.yaml   # YAML 1.2, update of PyYAML; comments round-trip\n  - PySyck        # YAML 1.0, syck binding\n  - strictyaml    # Restricted YAML subset\n\n  R:\n  - R YAML        # libyaml wrapper\n\n  Raku:\n  - YAMLish       # Port of YAMLish to Raku\n  - YAML::Parser::LibYAML  # LibYAML wrapper\n\n  Ruby:\n  - psych         # libyaml wrapper (in Ruby core for 1.9.2)\n  - RbYaml        # YAML 1.1 (PyYAML Port)\n  - yaml4r        # YAML 1.0, standard library syck binding\n\n  Rust:\n  - yaml-rust     # YAML 1.2 implementation in pure Rust\n  - serde-yaml    # YAML de/serialization of structs\n\n  Shell:\n  - parse_yaml    # Simple YAML parser for Bash using sed and awk\n  - shyaml        # Read YAML files - jq style\n\n  Swift:\n  - Yams          # libyaml wrapper\n\n  Others:\n  - yamlvim       # YAML dumper/emitter in pure vimscript\n\nRelated Projects:\n  - Rx            # Multi-Language Schemata Tool for JSON/YAML\n  - Kwalify       # Ruby Schemata Tool for JSON/YAML\n  - pyKwalify     # Python Schemata Tool for JSON/YAML\n  - yatools.net   # Visual Studio editor for YAML\n  - JSON          # Official JSON Website\n  - Pygments      # Python language Syntax Colorizer /w YAML support\n  - yamllint      # YAML Linter based on PyYAML\n  - YAML Diff     # Semantically compare two YAML documents\n  - JSON Schema   # YAML-compliant JSON standard for data validation\n\n# Edit This Website\n...\n',c=e=>JSON.stringify((0,s.qg)(e),null,2),d=()=>{let[{yaml:e=o,json:n=c(o)},a]=(0,t.useState)({yaml:o,json:c(o)});return(0,l.jsxs)("div",{className:"flex h-screen w-screen flex-col",children:[(0,l.jsx)(i.F,{}),(0,l.jsx)(r.c,{}),(0,l.jsx)("main",{className:"container mx-auto grow p-4 md:p-8",children:(0,l.jsxs)("div",{className:"grid h-full grow grid-cols-1 gap-4 md:grid-cols-2 md:gap-8",children:[(0,l.jsx)("div",{className:"col-span-1",children:(0,l.jsx)("textarea",{id:"yaml",name:"yaml",placeholder:"YAML",className:"h-full w-full resize-none rounded-xl border border-neutral-800 p-4 whitespace-nowrap shadow focus:outline-none",value:e,onChange:e=>{let n=e.target.value,l=c(n);a(e=>({...e,yaml:n,json:l}))}})}),(0,l.jsx)("div",{className:"col-span-1",children:(0,l.jsx)("textarea",{id:"json",name:"json",placeholder:"JSON",className:"h-full w-full resize-none rounded-xl border border-neutral-800 p-4 whitespace-nowrap shadow focus:outline-none",value:n,readOnly:!0})})]})})]})}},3266:(e,n,a)=>{"use strict";a.d(n,{c:()=>r});var l=a(2548);let r=e=>{let{className:n=""}=e;return(0,l.jsx)("div",{className:"".concat("w-full border-t border-neutral-800"," ").concat(n)})}},8646:(e,n,a)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/converter/yaml",function(){return a(2988)}])}},e=>{e.O(0,[8159,985,636,6593,8792],()=>e(e.s=8646)),_N_E=e.O()}]);